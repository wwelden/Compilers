loadI  1024         => r38 //loadI  1024 => r1
loadI  4            => r25 //loadI  4 => r5
add    r38  , r25   => r29 //add    r1, r5 => r1
load   r29          => r34 //load   r1 => r4
store  r33          => r29 //store  r3 => r1
lshift r37  , r34   => r35 //lshift r2, r4 => r2
lshift r34  , r36   => r10 //lshift r4, r7 => r8
lshift r34  , r35   => r28 //lshift r4, r2 => r4
mult   r33  , r33   => r26 //mult   r3, r3 => r3
rshift r32  , r26   => r31 //rshift r6, r3 => r7
loadI  16           => r30 //loadI  16 => r2
add    r26  , r29   => r24 //add    r3, r1 => r1
load   r24          => r14 //load   r1 => r2
add    r28  , r14   => r27 //add    r4, r2 => r4
mult   r14  , r26   => r17 //mult   r2, r3 => r4
store  r17          => r24 //store  r4 => r1
loadI  0            => r21 //loadI  0 => r3
sub    r24  , r25   => r23 //sub    r1, r5 => r1
loadI  1024         => r18 //loadI  1024 => r1
add    r17  , r21   => r22 //add    r4, r3 => r5
sub    r14  , r21   => r20 //sub    r2, r3 => r3
loadI  4            => r19 //loadI  4 => r5
loadI  4            => r16 //loadI  4 => r3
sub    r18  , r16   => r3 //sub    r1, r3 => r1
mult   r16  , r17   => r15 //mult   r3, r4 => r4
load   r3           => r7 //load   r1 => r4
loadI  4            => r13 //loadI  4 => r3
add    r13  , r7    => r6 //add    r3, r4 => r5
mult   r13  , r14   => r12 //mult   r3, r2 => r2
sub    r6   , r11   => r2 //sub    r5, r9 => r9
loadI  166          => r0 //loadI  166 => r2
mult   r7   , r10   => r9 //mult   r4, r8 => r3
store  r7           => r3 //store  r4 => r1
rshift r9   , r6    => r8 //rshift r3, r5 => r3
store  r7           => r3 //store  r4 => r1
sub    r6   , r3    => r5 //sub    r5, r1 => r6
mult   r0   , r0    => r4 //mult   r2, r2 => r4
store  r2           => r3 //store  r9 => r1
loadI  1024         => r1 //loadI  1024 => r1
store  r0           => r1 //store  r2 => r1
output 1020               //output 1020
output 1024               //output 1024
