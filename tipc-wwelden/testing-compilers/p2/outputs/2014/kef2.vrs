loadI  2048         => r23 //loadI  2048 => r0
load   r23          => r8 //load   r0 => r0
loadI  2            => r22 //loadI  2 => r1
rshift r8   , r22   => r20 //rshift r0, r1 => r2
loadI  4            => r19 //loadI  4 => r3
rshift r8   , r19   => r21 //rshift r0, r3 => r4
add    r20  , r21   => r18 //add    r2, r4 => r5
rshift r18  , r19   => r17 //rshift r5, r3 => r6
add    r17  , r18   => r14 //add    r6, r5 => r5
loadI  8            => r16 //loadI  8 => r7
rshift r14  , r16   => r15 //rshift r5, r7 => r8
add    r14  , r15   => r11 //add    r5, r8 => r5
loadI  16           => r13 //loadI  16 => r9
rshift r11  , r13   => r12 //rshift r5, r9 => r10
add    r11  , r12   => r3 //add    r5, r10 => r5
loadI  3            => r10 //loadI  3 => r11
mult   r10  , r3    => r9 //mult   r11, r5 => r12
sub    r8   , r9    => r7 //sub    r0, r12 => r13
loadI  11           => r6 //loadI  11 => r14
mult   r6   , r7    => r4 //mult   r14, r13 => r15
loadI  5            => r5 //loadI  5 => r16
rshift r4   , r5    => r2 //rshift r15, r16 => r17
add    r2   , r3    => r0 //add    r17, r5 => r18
loadI  1024         => r1 //loadI  1024 => r19
store  r0           => r1 //store  r18 => r19
output 1024               //output 1024
